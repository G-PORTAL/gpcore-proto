syntax = "proto3";

package gpcloud.api.admin.v1;

import "gpcloud/v1/options.proto";
import "gpcloud/api/admin/v1/requests.proto";
import "gpcloud/api/admin/v1/responses.proto";

service AdminService {
  rpc ListRegions (gpcloud.api.admin.v1.ListRegionsRequest) returns (gpcloud.api.admin.v1.ListRegionsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-region"]
    };
  }
  rpc GetRegion (gpcloud.api.admin.v1.GetRegionRequest) returns (gpcloud.api.admin.v1.GetRegionResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-region"]
    };
  }

  rpc UpdateDatacenter (gpcloud.api.admin.v1.UpdateDatacenterRequest) returns (gpcloud.api.admin.v1.UpdateDatacenterResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-datacenter"]
    };
  }

  rpc ListAgents (gpcloud.api.admin.v1.ListAgentsRequest) returns (gpcloud.api.admin.v1.ListAgentsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-agent"]
    };
  }
  rpc CreateAgent (gpcloud.api.admin.v1.CreateAgentRequest) returns (gpcloud.api.admin.v1.CreateAgentResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-agent"]
    };
  }
  rpc DeleteAgent (gpcloud.api.admin.v1.DeleteAgentRequest) returns (gpcloud.api.admin.v1.DeleteAgentResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-agent"]
    };
  }

  rpc ListServers (gpcloud.api.admin.v1.ListServersRequest) returns (gpcloud.api.admin.v1.ListServersResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-server"]
    };
  }

  rpc GetServerSearchOptions(gpcloud.api.admin.v1.GetServerSearchOptionsRequest) returns (gpcloud.api.admin.v1.GetServerSearchOptionsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-server"]
    };
  }

  rpc ImportServer (gpcloud.api.admin.v1.ImportServerRequest) returns (gpcloud.api.admin.v1.ImportServerResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["import-server"]
    };
  }

  rpc GetServer (gpcloud.api.admin.v1.GetServerRequest) returns (gpcloud.api.admin.v1.GetServerResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-server"]
    };
  }
  rpc UpdateServer (gpcloud.api.admin.v1.UpdateServerRequest) returns (gpcloud.api.admin.v1.UpdateServerResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-server"]
    };
  }
  rpc DeleteServer (gpcloud.api.admin.v1.DeleteServerRequest) returns (gpcloud.api.admin.v1.DeleteServerResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-server"]
    };
  }

  rpc ListServerLogs (gpcloud.api.admin.v1.ListServerLogsRequest) returns (gpcloud.api.admin.v1.ListServerLogsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-server"]
    };
  }

  rpc ListUsers (gpcloud.api.admin.v1.ListUsersRequest) returns (gpcloud.api.admin.v1.ListUsersResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-user"]
    };
  }
  rpc GetUser (gpcloud.api.admin.v1.GetUserRequest) returns (gpcloud.api.admin.v1.GetUserResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-user"]
    };
  }
  rpc UpdateUser (gpcloud.api.admin.v1.UpdateUserRequest) returns (gpcloud.api.admin.v1.UpdateUserResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-user"]
    };
  }
  rpc LockUser (gpcloud.api.admin.v1.LockUserRequest) returns (gpcloud.api.admin.v1.LockUserResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-user"]
    };
  }
  rpc UnlockUser (gpcloud.api.admin.v1.UnlockUserRequest) returns (gpcloud.api.admin.v1.UnlockUserResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-user"]
    };
  }

  rpc GetServerConsole (gpcloud.api.admin.v1.GetServerConsoleRequest) returns (gpcloud.api.admin.v1.GetServerConsoleResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-server"]
    };
  }

  // GetServerPlatformManagement Returns Platform Management data for server
  rpc GetServerPlatformManagement (gpcloud.api.admin.v1.GetServerPlatformManagementRequest) returns (gpcloud.api.admin.v1.GetServerPlatformManagementResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-server"]
    };
  }

  // List all available server from our Netbox Inventory
  rpc ListAvailableServer (gpcloud.api.admin.v1.ListAvailableServerRequest) returns (gpcloud.api.admin.v1.ListAvailableServerResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-server"]
    };
  }

  // Create a new public image
  rpc CreateImage (gpcloud.api.admin.v1.CreateImageRequest) returns (gpcloud.api.admin.v1.CreateImageResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-image"]
    };
  }

  // List all public images
  rpc ListImages (gpcloud.api.admin.v1.ListImagesRequest) returns (gpcloud.api.admin.v1.ListImagesResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-image"]
    };
  }

  // Return a single public image by ID
  rpc GetImage (gpcloud.api.admin.v1.GetImageRequest) returns (gpcloud.api.admin.v1.GetImageResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-image"]
    };
  }

  // Updates a public image
  rpc UpdateImage (gpcloud.api.admin.v1.UpdateImageRequest) returns (gpcloud.api.admin.v1.UpdateImageResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-image"]
    };
  }

  // Deletes a public image
  rpc DeleteImage (gpcloud.api.admin.v1.DeleteImageRequest) returns (gpcloud.api.admin.v1.DeleteImageResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-image"]
    };
  }

  // DeleteImageVersion Delete a project image version
  rpc DeleteImageVersion (gpcloud.api.admin.v1.DeleteImageVersionRequest) returns (gpcloud.api.admin.v1.DeleteImageVersionResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-image"]
    };
  }

  // Lists all operating systems
  rpc ListOperatingSystems (gpcloud.api.admin.v1.ListOperatingSystemsRequest) returns (gpcloud.api.admin.v1.ListOperatingSystemsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-operating-system"]
    };
  }

  // Delete a operating system
  rpc DeleteOperatingSystem (gpcloud.api.admin.v1.DeleteOperatingSystemRequest) returns (gpcloud.api.admin.v1.DeleteOperatingSystemResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-operating-system"]
    };
  }

  // Creates a new operating system
  rpc CreateOperatingSystem (gpcloud.api.admin.v1.CreateOperatingSystemRequest) returns (gpcloud.api.admin.v1.CreateOperatingSystemResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-operating-system"]
    };
  }

  // Get a single operating system
  rpc GetOperatingSystem (gpcloud.api.admin.v1.GetOperatingSystemRequest) returns (gpcloud.api.admin.v1.GetOperatingSystemResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-operating-system"]
    };
  }

  // Update a single operating system
  rpc UpdateOperatingSystem (gpcloud.api.admin.v1.UpdateOperatingSystemRequest) returns (gpcloud.api.admin.v1.UpdateOperatingSystemResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-operating-system"]
    };
  }

  // List all existing flavours
  rpc ListFlavours (gpcloud.api.admin.v1.ListFlavoursRequest) returns (gpcloud.api.admin.v1.ListFlavoursResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-flavour"]
    };
  }

  // Return a single flavour
  rpc GetFlavour (gpcloud.api.admin.v1.GetFlavourRequest) returns (gpcloud.api.admin.v1.GetFlavourResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-flavour"]
    };
  }

  // Delete a flavour
  rpc DeleteFlavour (gpcloud.api.admin.v1.DeleteFlavourRequest) returns (gpcloud.api.admin.v1.DeleteFlavourResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-flavour"]
    };
  }

  // Create a new flavour
  rpc CreateFlavour (gpcloud.api.admin.v1.CreateFlavourRequest) returns (gpcloud.api.admin.v1.CreateFlavourResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-flavour"]
    };
  }

  // Update a existing flavour
  rpc UpdateFlavour (gpcloud.api.admin.v1.UpdateFlavourRequest) returns (gpcloud.api.admin.v1.UpdateFlavourResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-flavour"]
    };
  }

  // List all switches
  rpc ListSwitches (gpcloud.api.admin.v1.ListSwitchesRequest) returns (gpcloud.api.admin.v1.ListSwitchesResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-switch"]
    };
  }

  // Get a single switch
  rpc GetSwitch (gpcloud.api.admin.v1.GetSwitchRequest) returns (gpcloud.api.admin.v1.GetSwitchResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-switch"]
    };
  }

  // ListProjects list all available projects.
  rpc ListProjects (gpcloud.api.admin.v1.ListProjectsRequest) returns (gpcloud.api.admin.v1.ListProjectsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-project"]
    };
  }

  // GetProject get a single project for a given project id.
  rpc GetProject (gpcloud.api.admin.v1.GetProjectRequest) returns (gpcloud.api.admin.v1.GetProjectResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-project"]
    };
  }

  // UpdateProject updates a project by its given fields.
  rpc UpdateProject (gpcloud.api.admin.v1.UpdateProjectRequest) returns (gpcloud.api.admin.v1.UpdateProjectResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-project"]
    };
  }

  // List project specific networks
  rpc ListProjectNetworks (gpcloud.api.admin.v1.ListProjectNetworksRequest) returns (gpcloud.api.admin.v1.ListProjectNetworksResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-project"]
    };
  }

  // Create a new project network
  rpc CreateProjectNetwork (gpcloud.api.admin.v1.CreateProjectNetworkRequest) returns (gpcloud.api.admin.v1.CreateProjectNetworkResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-project"]
    };
  }

  // List admin logs
  rpc ListAdminLogs (gpcloud.api.admin.v1.ListAdminLogsRequest) returns (gpcloud.api.admin.v1.ListAdminLogsResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-admin-log"]
    };
  }

  // Get SPLA reporting
  rpc GetSplaReporting (gpcloud.api.admin.v1.GetSplaReportingRequest) returns (gpcloud.api.admin.v1.GetSplaReportingResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-spla-reporting"]
    };
  }

  // List IP histories
  rpc ListIPHistories (gpcloud.api.admin.v1.ListIPHistoriesRequest) returns (gpcloud.api.admin.v1.ListIPHistoriesResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-ip-history"]
    };
  }

  // Lists all networks
  rpc ListNetworks (gpcloud.api.admin.v1.ListNetworksRequest) returns (gpcloud.api.admin.v1.ListNetworksResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-network"]
    };
  }

  // Create new network
  rpc CreateNetwork (gpcloud.api.admin.v1.CreateNetworkRequest) returns (gpcloud.api.admin.v1.CreateNetworkResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-network"]
    };
  }

  // Delete a network
  rpc DeleteNetwork (gpcloud.api.admin.v1.DeleteNetworkRequest) returns (gpcloud.api.admin.v1.DeleteNetworkResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-network"]
    };
  }

  // Get a single network
  rpc GetNetwork (gpcloud.api.admin.v1.GetNetworkRequest) returns (gpcloud.api.admin.v1.GetNetworkResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-network"]
    };
  }

  // Updates a network
  rpc UpdateNetwork (gpcloud.api.admin.v1.UpdateNetworkRequest) returns (gpcloud.api.admin.v1.UpdateNetworkResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-network"]
    };
  }

  // Delete a subnet
  rpc DeleteSubnet (gpcloud.api.admin.v1.DeleteSubnetRequest) returns (gpcloud.api.admin.v1.DeleteSubnetResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["delete-network"]
    };
  }

  // Create new subnet
  rpc CreateSubnet (gpcloud.api.admin.v1.CreateSubnetRequest) returns (gpcloud.api.admin.v1.CreateSubnetResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-network"]
    };
  }

  // Updates a subnet
  rpc UpdateSubnet (gpcloud.api.admin.v1.UpdateSubnetRequest) returns (gpcloud.api.admin.v1.UpdateSubnetResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["manage-network"]
    };
  }

  // Get Dashboard information
  rpc GetDashboard (gpcloud.api.admin.v1.GetDashboardRequest) returns (gpcloud.api.admin.v1.GetDashboardResponse) {
    option (gpcloud.v1.api) = {
      required_roles: ["view-dashboard"]
    };
  }
}