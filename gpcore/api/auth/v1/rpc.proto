syntax = "proto3";

package gpcore.api.auth.v1;

import "gpcore/v1/options.proto";
import "gpcore/api/auth/v1/requests.proto";
import "gpcore/api/auth/v1/responses.proto";

// AuthService provides authentication and authorization services.
service AuthService {
  rpc Register (gpcore.api.auth.v1.RegisterRequest) returns (gpcore.api.auth.v1.RegisterResponse) {
    option (gpcore.v1.api) = {
      authorization_type: AUTHORIZATION_TYPE_PUBLIC;
    };
  }

  rpc GetUser (gpcore.api.auth.v1.GetUserRequest) returns (gpcore.api.auth.v1.GetUserResponse) {}

  rpc ResendConfirmEMail (gpcore.api.auth.v1.ResendConfirmEMailRequest) returns (gpcore.api.auth.v1.ResendConfirmEMailResponse) {}

  // ListClients returns a list of your OAuth 2 / OpenID Connect clients.
  rpc ListClients (gpcore.api.auth.v1.ListClientsRequest) returns (gpcore.api.auth.v1.ListClientsResponse) {}

  // CreateClient creates a new OAuth 2 / OpenID Connect client inclusive a service account.
  // The client secret is returned in the response as well, please store it securely.
  rpc CreateClient (gpcore.api.auth.v1.CreateClientRequest) returns (gpcore.api.auth.v1.CreateClientResponse) {}

  // GetClient returns the details of an OAuth 2 / OpenID Connect client by its ID.
  rpc GetClient (gpcore.api.auth.v1.GetClientRequest) returns (gpcore.api.auth.v1.GetClientResponse) {}

  // UpdateClient updates an OAuth 2 / OpenID Connect client by its ID.
  rpc UpdateClient (gpcore.api.auth.v1.UpdateClientRequest) returns (gpcore.api.auth.v1.UpdateClientResponse) {}

  // DeleteClient deletes an OAuth 2 / OpenID Connect client by its ID.
  rpc DeleteClient (gpcore.api.auth.v1.DeleteClientRequest) returns (gpcore.api.auth.v1.DeleteClientResponse) {}

  // ResetClientSecret resets the client secret of an OAuth 2 / OpenID Connect client by its ID.
  // Please store the new client secret securely.
  rpc ResetClientSecret (gpcore.api.auth.v1.ResetClientSecretRequest) returns (gpcore.api.auth.v1.ResetClientSecretResponse) {}
}
