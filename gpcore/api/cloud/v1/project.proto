syntax = "proto3";

package gpcore.api.cloud.v1;

import "google/protobuf/timestamp.proto";
import "gpcore/api/cloud/v1/user.proto";
import "gpcore/api/cloud/v1/server_pool.proto";
import "gpcore/api/cloud/v1/payment.proto";
import "gpcore/api/cloud/v1/flavour.proto";
import "gpcore/api/cloud/v1/billing.proto";
import "gpcore/type/v1/price.proto";
import "gpcore/type/v1/ssh_key.proto";
import "gpcore/type/v1/cloud_provider.proto";

enum ProjectLockReason {
  PROJECT_LOCK_REASON_UNSPECIFIED = 0;
  PROJECT_LOCK_REASON_MISSING_BILLING_PROFILE = 1;
  PROJECT_LOCK_REASON_MISSING_PAYMENT_PROFILE = 2;
  PROJECT_LOCK_REASON_MISSING_SUBSCRIPTION = 3;
  PROJECT_LOCK_REASON_SUBSCRIPTION_NOT_ACTIVE = 4;
}

/* Deprecated. This will be removed on 2025/03/01. */
enum ProjectEnvironment {
  PROJECT_ENVIRONMENT_UNSPECIFIED = 0 [deprecated = true];
  PROJECT_ENVIRONMENT_DEVELOPMENT = 1 [deprecated = true];
  PROJECT_ENVIRONMENT_STAGING = 2 [deprecated = true];
  PROJECT_ENVIRONMENT_PRODUCTION = 3 [deprecated = true];
}

enum ProjectMemberRole {
  PROJECT_MEMBER_ROLE_UNSPECIFIED = 0;
  PROJECT_MEMBER_ROLE_OWNER = 1;
  PROJECT_MEMBER_ROLE_MEMBER = 2;
}

message ProjectMember {
  gpcore.api.cloud.v1.BasicUser user = 1;

  gpcore.api.cloud.v1.ProjectMemberRole role = 2;

  bool confirmed = 3;

  bool default = 4;

  google.protobuf.Timestamp created_at = 1000;
  google.protobuf.Timestamp updated_at = 1001;
}

message BasicProject {
  string id = 1;
  string name = 2;
  string avatar_url = 4;
}

message Project {
  string id = 1;

  // Project name
  string name = 2;

  // Deprecated. This will be removed on 2025/03/01.
  string description = 3 [deprecated = true];

  // Avatar URL
  string avatar_url = 4;

  // Currency used for that specific project
  gpcore.api.cloud.v1.Currency currency = 5;

  // Deprecated. This will be removed on 2025/03/01.
  gpcore.api.cloud.v1.ProjectEnvironment environment = 6 [deprecated = true];

  // Members
  repeated gpcore.api.cloud.v1.ProjectMember members = 7;

  /* field 8 removed - gpcore.api.cloud.v1.CreditCard credit_card = 8; */
  reserved 8;
  reserved "credit_card";

  // Linked billing address
  gpcore.api.cloud.v1.BillingProfile billing_profile = 9;

  /* field 10 removed - gpcore.api.cloud.v1.PaymentMethod payment_method = 10; */
  /* field 11 removed - repeated gpcore.api.cloud.v1.PaymentMethod allowed_payment_methods = 11; */
  /* field 12 removed - repeated gpcore.api.cloud.v1.ProjectLockReason lock_reasons = 12; */
  reserved 10 to 12;
  reserved "payment_method";
  reserved "allowed_payment_methods";
  reserved "lock_reasons";

  // Project assigned server pools
  repeated gpcore.api.cloud.v1.ServerPool server_pools = 13;

  // Project timestamps
  google.protobuf.Timestamp created_at = 1000;
  google.protobuf.Timestamp updated_at = 1001;
}

message ProjectLog {
  string id = 1;

  gpcore.api.cloud.v1.BasicUser user = 2;

  string message = 3;

  google.protobuf.Timestamp created_at = 1000;
  google.protobuf.Timestamp updated_at = 1001;
}

message ProjectInvite {
  string id = 1;

  gpcore.api.cloud.v1.BasicProject project = 2;

  google.protobuf.Timestamp created_at = 1000;
}

message ProjectSSHKey {
  gpcore.type.v1.SSHKey ssh_key = 1;

  gpcore.api.cloud.v1.BasicUser user = 2;
}

enum UsageUnitType {
  USAGE_UNIT_TYPE_UNSPECIFIED = 0;
  USAGE_UNIT_TYPE_HOURS = 1;
  USAGE_UNIT_TYPE_MONTHS = 2;
  USAGE_UNIT_TYPE_CORES = 3;
}

message ProjectNodeUsage {
  string id = 1;

  string name = 2;

  google.protobuf.Timestamp started_at = 998;
  google.protobuf.Timestamp ended_at = 999;
}

message ProjectFlavourUsage {
  gpcore.api.cloud.v1.BasicFlavour flavour = 1;

  gpcore.api.cloud.v1.BillingPeriod period = 2;

  gpcore.type.v1.Price total = 3;

  double units = 4;

  gpcore.api.cloud.v1.UsageUnitType unit_type = 5;

  repeated gpcore.api.cloud.v1.ProjectNodeUsage node_usages = 6;
}

message ProjectUsage {
  gpcore.type.v1.Price total = 1;

  repeated gpcore.api.cloud.v1.ProjectFlavourUsage flavour_usages = 2;
}

// ProjectCloudProvider is a message for the cloud provider information of a
// project. A project can have multiple cloud providers assigned to it to provide
// additional external computing power to the project.
message ProjectCloudProvider {
  // UUID of the cloud provider
  string id = 1;

  // Type of the cloud provider
  gpcore.type.v1.CloudProviderType type = 2;

  // Region identifier of the cloud provider
  string region = 3;

  // An optional name for the cloud provider reference
  string name = 4;

  // If the cloud provider is enabled and can be accessed by the project (e.g.
  // API token is valid, the region is correct and available, ...)
  bool valid = 5;

  // Timestamp when the cloud provider was added to the project
  google.protobuf.Timestamp created_at = 1000;
  // Timestamp when the cloud provider was last updated (by the user or and internal
  // mechanism like setting valid to false due to an invalid API token)
  google.protobuf.Timestamp updated_at = 1001;
}

